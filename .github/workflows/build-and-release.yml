name: Build and Release

on:
  push:
  pull_request:
  workflow_call:

permissions:
  contents: write

jobs:
  build-and-release:
    env:
      tools: ${{ github.workspace }}/tools
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install apt packages
        run: |
          sudo add-apt-repository ppa:inkscape.dev/stable
          sudo apt-get update
          sudo apt-get install -y libtool-bin
          sudo apt-get install -y tcl-dev tk-dev libcairo-dev
          sudo apt-get install -y python3 libxaw7-dev libreadline6-dev
          sudo apt-get install -y libxpm-dev libx11-dev flex
          sudo apt-get install -y inkscape

      - name: Install magic
        run: |
          git clone --depth 1 https://github.com/RTimothyEdwards/magic.git
          cd magic
          ./configure --prefix=${{ env.tools }}/magic
          make -j`nproc`
          make install
          echo "${{ env.tools }}/magic/bin" >> $GITHUB_PATH

      - name: Install ngspice
        run: |
          git clone --depth 1 git://git.code.sf.net/p/ngspice/ngspice
          cd ngspice
          mkdir -p build
          ./autogen.sh
          cd build
          ../configure \
            --prefix=${{ env.tools }}/ngspice \
            --with-x \
            --enable-xspice \
            --disable-debug \
            --enable-cider \
            --with-readline=yes \
            --enable-openmp \
            --enable-osdi
          make -j`nproc`
          make install
          echo "${{ env.tools }}/ngspice/bin" >> $GITHUB_PATH

      - name: Install xschem
        run: |
          git clone --depth 1 https://github.com/StefanSchippers/xschem.git
          cd xschem
          ./configure --prefix=${{ env.tools }}/xschem
          make -j`nproc`
          make install
          echo "${{ env.tools }}/xschem/bin" >> $GITHUB_PATH

      - name: Install netgen
        run: |
          git clone --depth 1 https://github.com/RTimothyEdwards/netgen.git
          cd netgen
          ./configure --prefix=${{ env.tools }}/netgen
          make -j`nproc`
          make install
          echo "${{ env.tools }}/netgen/bin" >> $GITHUB_PATH

      - name: Generate PDK files
        run: |
          git clone --depth 1 git://opencircuitdesign.com/open_pdks
          cd open_pdks
          ./configure \
            --prefix=${{ env.tools }}/open_pdks \
            --enable-sky130-pdk \
            --with-sky130-variants=A \
            --enable-primitive-sky130 \
            --disable-io-sky130 \
            --disable-sc-hs-sky130 \
            --disable-sc-ms-sky130 \
            --disable-sc-ls-sky130 \
            --disable-sc-lp-sky130 \
            --enable-sc-hd-sky130 \
            --disable-sc-hdll-sky130 \
            --disable-sc-hvl-sky130 \
            --disable-alpha-sky130 \
            --enable-xschem-sky130 \
            --disable-sram-sky130 \
            --disable-osu-t12-sky130 \
            --disable-osu-t15-sky130 \
            --disable-osu-t18-sky130
          make -j`nproc`
          make install
          make veryclean

      - name: LVS
        run: |
          export PDK_ROOT=${{ env.tools }}/open_pdks/share/pdk
          make all_lvs

      - name: Generate SVGs
        run: |
          export PDK_ROOT=${{ env.tools }}/open_pdks/share/pdk
          make all_svg

      - name: Tar
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          cd svg
          tar -czf cells.tar.gz *

      - name: Create Tag
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "TAG_NAME=$(date +%Y.%m.%d.%H.%M)" >> "$GITHUB_ENV"
          git tag ${{ env.TAG_NAME }}
          git push origin ${{ env.TAG_NAME }}

      - name: Create Release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: True
          omitBody: True
          tag: ${{ env.TAG_NAME }}
          artifacts: |
            svg/cells.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
