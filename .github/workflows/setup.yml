# This is a basic workflow to help you get started with Actions

name: Setup

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    # Temporarily restricted to testing branch, as otherwise concurrent runs happen every push
    branches: [ "open_pdks_testing" ]
  # pull_request:

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 
      - name: Free Memory
        run: |
              sudo rm -rf /usr/share/dotnet
              sudo rm -rf "$AGENT_TOOLSDIRECTORY"        
      
      - name: Install Dependencies 
        run: |
              sudo apt-get update
              sudo apt install python3
              sudo apt-get install -y tk-dev libxpm-dev tcl-dev libx11-dev flex libtool-bin libxaw7-dev libreadline6-dev libcairo2-dev m4 tcsh
      
      # Using open_pdk xschem
      # - name: Install Xschem
      #   run: |
      #         git clone --depth 1 https://github.com/StefanSchippers/xschem.git xschem-src
      #         cd xschem-src
      #         ./configure
      #         make
      #         sudo make install

        # Works now, removed these commands, not sure if necessary
        #      make database/database.h
        #      make -j$(nproc)
      - name: Install magic
        run: | 
              git clone --depth 1 https://github.com/RTimothyEdwards/magic
              cd magic
              ./configure
              make
              sudo make install
      
      - name: Install ngspice
        run: |
              git clone --depth 1 git://git.code.sf.net/p/ngspice/ngspice
              cd ngspice
              mkdir release
              ./autogen.sh
              cd release
              ../configure --with-x --enable-xspice --disable-debug --enable-cider --with-readline=yes --enable-openmp --enable-osdi
              make

      - name: Clone PDK Libraries
        run: |
              mkdir pdk_lib
              cd pdk_lib
              git clone --depth 1 https://github.com/efabless/skywater-pdk-libs-sky130_fd_pr
              git clone --depth 1 https://github.com/efabless/skywater-pdk-libs-sky130_fd_io
              git clone --depth 1 https://github.com/efabless/skywater-pdk-libs-sky130_fd_sc_hs
              git clone --depth 1 https://github.com/efabless/skywater-pdk-libs-sky130_fd_sc_hd
              git clone --depth 1 https://github.com/efabless/skywater-pdk-libs-sky130_fd_sc_hvl
              
      - name: Generate PDK files
        run: |
              git clone --depth 1 git://opencircuitdesign.com/open_pdks
              cd open_pdks
              echo "$GITHUB_WORKSPACE/open_pdks" >> $GITHUB_PATH
              ./configure --prefix=${{ github.workspace }}/open_pdks --enable-sky130-pdk --enable-xschem-sky130 --with-sky130-variants=A --enable-primitive-sky130=${{ github.workspace }}/pdk_lib/skywater-pdk-libs-sky130_fd_pr --enable-io-sky130=${{ github.workspace }}/pdk_lib/skywater-pdk-libs-sky130_fd_io --enable-sc-hs-sky130=${{ github.workspace }}/pdk_lib/skywater-pdk-libs-sky130_fd_sc_hs --enable-sc-hd-sky130=${{ github.workspace }}/pdk_lib/skywater-pdk-libs-sky130_fd_sc_hd --enable-sc-hvl-sky130=${{ github.workspace }}/pdk_lib/skywater-pdk-libs-sky130_fd_sc_hvl
              make
              sudo make install
              make veryclean
              
      # # For testing on device only, does not seem to work on GitHub
      # - name: Verify Installation
      #   run: |
      #         git clone --depth 1 https://github.com/d-m-bailey/sky130_fd_io.git
      #         cd sky130_fd_io
      #         export PDKPATH=${{ github.workspace }}/open_pdks
      #         xschem --log test.log <<EOF
      #         xschem load f sky130_fd_io/top_gpiov2.sch 
      #         xschem exit closewindow force
      #         EOF
      #         if grep -q "Symbol not found" test.log; then
      #           echo "Error: Symbol not Found"
      #           exit 1
      #         else
      #           echo "No Symbol Errors"
      #           exit 0
      #         fi
              
      - name: Install caravel
        run: |
              git clone --depth 1 https://github.com/efabless/caravel.git
              
      - name: Install netgen
        run: |
              git clone --depth 1 https://github.com/RTimothyEdwards/netgen.git
              cd netgen
              ./configure
              make
              sudo make install

      - name: LVS Setup
        run: |
              git clone https://github.com/d-m-bailey/extra_be_checks ${{ github.workspace }}/extra_be_checks
              export LVS_ROOT=${{ github.workspace }}/extra_be_checks
              export WORK_ROOT=$PWD/work/top_gpiov2
              export PDK_ROOT=${{ github.workspace }}/open_pdks/pdk
              export PDK=sky130A
              export CARAVEL_ROOT=${{ github.workspace }}/caravel_mpw-one
